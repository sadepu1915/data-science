diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- CI_T2 <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- cover_t2 <- matrix(NA, nrow = N, ncol = p)
FCrit <- (n - 1) * p * qf(0.975, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
##### T2
for(i in 1:p) {
CI_T2 <- x_bar[k] + c(-1, 1) * sqrt(F_crit * S[i, i] / n)
cover_t2[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
}
for(i in 1:p) {
CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(F_crit * S[i, i] / n)
cover_t2[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
for(i in 1:p) {
CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(FCrit * S[i, i] / n)
cover_t2[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
cover_b
cover_t2
colMeans(cover_t)
colMeans(cover_b)
colMeans(cover_t2)
rm(list=ls())
library(MASS)
n <- 30
p <- 5
mu <- rep(0, p)
rho <- 0.6
Rho  <- matrix(rho, nrow  =  p, ncol =  p);
diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- CI_T2 <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- cover_t2 <- matrix(NA, nrow = N, ncol = p)
FCrit <- (n - 1) * p * qf(0.975, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
}
colMeans(cover_t)
library(MASS)
n <- 30
p <- 5
mu <- rep(0, p)
rho <- 0.6
Rho  <- matrix(rho, nrow  =  p, ncol =  p);
diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- CI_T2 <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- cover_t2 <- matrix(NA, nrow = N, ncol = p)
FCrit <- (n - 1) * p * qf(0.975, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
##### T2
for(i in 1:p) {
CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(FCrit * S[i, i] / n)
cover_t2[k, i] <- mu[i] >= CI_T2[i, 1] & mu[i] <= CI_T2[i, 2]
}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
}
colMeans(cover_t)
colMeans(cover_b)
library(MASS)
n <- 30
p <- 5
mu <- rep(0, p)
rho <- 0.6
Rho  <- matrix(rho, nrow  =  p, ncol =  p)
diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- CI_T2 <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- cover_t2 <- matrix(NA, nrow = N, ncol = p)
FCrit <- (n - 1) * p * qf(0.975, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
##### T2
f#or(i in 1:p) {
#  CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(FCrit * S[i, i] / n)
#  cover_t2[k, i] <- mu[i] >= CI_T2[i, 1] & mu[i] <= CI_T2[i, 2]
#}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
}
library(MASS)
n <- 30
p <- 5
mu <- rep(0, p)
rho <- 0.6
Rho  <- matrix(rho, nrow  =  p, ncol =  p)
diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- CI_T2 <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- cover_t2 <- matrix(NA, nrow = N, ncol = p)
FCrit <- (n - 1) * p * qf(0.975, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
##### T2
#for(i in 1:p) {
#  CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(FCrit * S[i, i] / n)
#  cover_t2[k, i] <- mu[i] >= CI_T2[i, 1] & mu[i] <= CI_T2[i, 2]
#}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
}
colMeans(cover_t)
colMeans(cover_b)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
#for(i in 1:p) {
#  CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
#  cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
#}
##### T2
#for(i in 1:p) {
#  CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(FCrit * S[i, i] / n)
#  cover_t2[k, i] <- mu[i] >= CI_T2[i, 1] & mu[i] <= CI_T2[i, 2]
#}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
}
colMeans(cover_b)
N <- 1000
CI_t <- CI_b <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- matrix(NA, nrow = N, ncol = p)
FCrit <- (n - 1) * p * qf(0.975, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
#for(i in 1:p) {
#  CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
#  cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
#}
##### T2
#for(i in 1:p) {
#  CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(FCrit * S[i, i] / n)
#  cover_t2[k, i] <- mu[i] >= CI_T2[i, 1] & mu[i] <= CI_T2[i, 2]
#}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
}
colMeans(cover_b)
ls()
rm(list=ls())
ls()
library(MASS)
n <- 50
p <- 5
mu <- rep(0, p)
rho <- 0.8
Rho  <- matrix(rho, nrow  =  p, ncol =  p);
diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- matrix(NA, nrow = N, ncol = p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(1 - 0.025 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
}
colMeans(cover_t)
colMeans(cover_b)
1-0.05
rm(list=ls())
library(MASS)
n <- 30
p <- 5
mu <- rep(0, p)
rho <- 0.6
Rho  <- matrix(rho, nrow  =  p, ncol =  p);
diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- CI_T2 <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- cover_t2 <- matrix(NA, nrow = N, ncol = p)
F_crit <- (n - 1) * p * qf(0.95, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(1 - 0.025 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
#ci_T2 <- x_bar[k] + c(-1, 1) * sqrt(F_crit * S[k, k] / n)
for(i in 1:p) {
CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(F_crit * S[i, i] / n)
cover_t2[k, i] <- mu[i] >= CI_T2[i, 1] & mu[i] <= CI_T2[i, 2]
}
}
colMeans(cover_t)
colMeans(cover_b)
colMeans(cover_t2)
total_coverage<-matrix(cover_t, cover_b, cover_t2, nrow=3)
total_coverage<-matrix(colMeans(cover_t), colMeans(cover_b), colMeans(cover_t2), nrow=3)
total_coverage
total_coverage<-matrix(c(colMeans(cover_t),colMeans(cover_b),colMeans(cover_t2)), nrow=3)
total_coverage
colMeans(cover_t)
t(colMeans(cover_t))
matrix(c(1,2,3,4,5,6,6,8), nrow=2)
matrix(c(1,2,3,4,5,6,6,8), ncol=4)
matrix(c(1,2,3,4,5,6,6,8),byrow = TRUE, nrow=2))
matrix(c(1,2,3,4,5,6,6,8),byrow = TRUE, nrow=2)
total_coverage<-matrix(c(colMeans(cover_t),colMeans(cover_b),colMeans(cover_t2)), nrow=3, byrow = TRUE)
total_coverage
rownames(total_coverage)<-c("one-at-a-atime", "T2 simul", "Bonferroni")
total_coverage
library(MASS)
n <- 30
p <- 5
mu <- rep(0, p)
rho <- 0.6
Rho  <- matrix(rho, nrow  =  p, ncol =  p);
diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- CI_T2 <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- cover_t2 <- matrix(NA, nrow = N, ncol = p)
F_crit <- (n - 1) * p * qf(0.95, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(1 - 0.025 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
#ci_T2 <- x_bar[k] + c(-1, 1) * sqrt(F_crit * S[k, k] / n)
for(i in 1:p) {
CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(F_crit * S[i, i] / n)
cover_t2[k, i] <- mu[i] >= CI_T2[i, 1] & mu[i] <= CI_T2[i, 2]
}
}
total_coverage<-matrix(c(colMeans(cover_t),colMeans(cover_b),colMeans(cover_t2)), nrow=3, byrow = TRUE)
library(MASS)
n <- 30
p <- 5
mu <- rep(0, p)
rho <- 0.6
Rho  <- matrix(rho, nrow  =  p, ncol =  p);
diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- CI_T2 <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- cover_t2 <- matrix(NA, nrow = N, ncol = p)
F_crit <- (n - 1) * p * qf(0.95, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(1 - 0.025 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
#ci_T2 <- x_bar[k] + c(-1, 1) * sqrt(F_crit * S[k, k] / n)
for(i in 1:p) {
CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(F_crit * S[i, i] / n)
cover_t2[k, i] <- mu[i] >= CI_T2[i, 1] & mu[i] <= CI_T2[i, 2]
}
}
total_coverage<-matrix(c(colMeans(cover_t),colMeans(cover_b),colMeans(cover_t2)), nrow=3, byrow = TRUE)
total_coverage
library(MASS)
n <- 30
p <- 5
mu <- rep(0, p)
rho <- 0.6
Rho  <- matrix(rho, nrow  =  p, ncol =  p);
diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- CI_T2 <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- cover_t2 <- matrix(NA, nrow = N, ncol = p)
F_crit <- (n - 1) * p * qf(0.95, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(1 - 0.025 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
#ci_T2 <- x_bar[k] + c(-1, 1) * sqrt(F_crit * S[k, k] / n)
for(i in 1:p) {
CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(F_crit * S[i, i] / n)
cover_t2[k, i] <- mu[i] >= CI_T2[i, 1] & mu[i] <= CI_T2[i, 2]
}
}
total_coverage<-matrix(c(colMeans(cover_t),colMeans(cover_b),colMeans(cover_t2)), nrow=3, byrow = TRUE)
rownames(total_coverage)<-c("one-at-a-atime", "T2 simul", "Bonferroni")
total_coverage
rownames(total_coverage)<-c("one-at-a-atime", "T2 simul", "Bonferroni")
library(MASS)
n <- 30
p <- 5
mu <- rep(0, p)
rho <- 0.6
Rho  <- matrix(rho, nrow  =  p, ncol =  p);
diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- CI_T2 <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- cover_t2 <- matrix(NA, nrow = N, ncol = p)
F_crit <- (n - 1) * p * qf(0.95, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(1 - 0.025 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
#ci_T2 <- x_bar[k] + c(-1, 1) * sqrt(F_crit * S[k, k] / n)
for(i in 1:p) {
CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(F_crit * S[i, i] / n)
cover_t2[k, i] <- mu[i] >= CI_T2[i, 1] & mu[i] <= CI_T2[i, 2]
}
}
total_coverage<-matrix(c(colMeans(cover_t),colMeans(cover_b),colMeans(cover_t2)), nrow=3, byrow = TRUE)
rownames(total_coverage)<-c("one-at-a-atime", "Bonferroni", "T2 simul")
total_coverage
pdf("636Hw03.pdf")
data3<-read.csv("../../HW/HW03/Auto_hw.csv")
attach(data3)
summary(manova(as.matrix(data3[, 2:4]) ~ cylinders + origin + cylinders * origin),test="Wilks")
###################
##2nd#############
library(MASS)
n <- 30
p <- 5
mu <- rep(0, p)
rho <- 0.6
Rho  <- matrix(rho, nrow  =  p, ncol =  p);
diag(Rho) <- 1
sg <- 1
Sigma <- sg * Rho
N <- 1000
CI_t <- CI_b <- CI_T2 <- matrix(NA, nrow =  p,  ncol  =  2)
cover_t <- cover_b <- cover_t2 <- matrix(NA, nrow = N, ncol = p)
F_crit <- (n - 1) * p * qf(0.95, p, n - p) / (n - p)
for(k in 1:N) {
## Simulate sample  and  compute  summary statistics.
X <- mvrnorm(n, mu, Sigma)
X_bar <- colMeans(X)
S <- var(X)
## Usual t-based 95 CIs for mean components. And record whether the intervals ’cover’
## (include) the true population mean value.
for(i in 1:p) {
CI_t[i, ] <- X_bar[i] + c(-1, 1) * qt(0.975, n - 1) * sqrt(S[i, i] / n)
cover_t[k, i] <- mu[i] >= CI_t[i, 1] & mu[i] <= CI_t[i, 2]
}
## Now do Bonferroni simultaneous 95 CIs.
for(i in 1:p) {
CI_b[i, ] <- X_bar[i] + c(-1, 1) * qt(1 - 0.025 / p, n - 1) * sqrt(S[i, i] / n)
cover_b[k, i] <- mu[i] >= CI_b[i, 1] & mu[i] <= CI_b[i, 2]
}
#ci_T2 <- x_bar[k] + c(-1, 1) * sqrt(F_crit * S[k, k] / n)
for(i in 1:p) {
CI_T2[i, ] <- X_bar[i] + c(-1, 1) * sqrt(F_crit * S[i, i] / n)
cover_t2[k, i] <- mu[i] >= CI_T2[i, 1] & mu[i] <= CI_T2[i, 2]
}
}
total_coverage<-matrix(c(colMeans(cover_t),colMeans(cover_b),colMeans(cover_t2)), nrow=3, byrow = TRUE)
rownames(total_coverage)<-c("one-at-a-atime", "Bonferroni", "T2 simul")
total_coverage
dev.off()
